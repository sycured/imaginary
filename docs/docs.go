// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "AGPL-3.0-only",
            "url": "https://www.gnu.org/licenses/agpl-3.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Returns information about the service",
                "produces": [
                    "application/json"
                ],
                "summary": "Index page",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Versions"
                        }
                    }
                }
            }
        },
        "/autorotate": {
            "post": {
                "description": "Automatically rotates an image based on EXIF orientation",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Auto-rotate image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/blur": {
            "post": {
                "description": "Applies Gaussian blur to an image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Apply Gaussian blur",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Sigma parameter for Gaussian blur",
                        "name": "sigma",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Minimum amplitude",
                        "name": "minampl",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/convert": {
            "post": {
                "description": "Converts an image to a different format",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Convert image format",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Quality of the output image (1-100)",
                        "name": "quality",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/crop": {
            "post": {
                "description": "Crops an image to the specified dimensions",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Crop image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Width of the output image",
                        "name": "width",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Height of the output image",
                        "name": "height",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Quality of the output image (1-100)",
                        "name": "quality",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/enlarge": {
            "post": {
                "description": "Enlarges an image to the specified dimensions",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Enlarge image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Width of the output image",
                        "name": "width",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Height of the output image",
                        "name": "height",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Quality of the output image (1-100)",
                        "name": "quality",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/extract": {
            "post": {
                "description": "Extracts a portion of the image with the specified dimensions",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Extract area from image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Top offset for extraction",
                        "name": "top",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Left offset for extraction",
                        "name": "left",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Width of the area to extract",
                        "name": "areawidth",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Height of the area to extract",
                        "name": "areaheight",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/fit": {
            "post": {
                "description": "Fits an image within the specified dimensions while maintaining aspect ratio",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Fit image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Width constraint",
                        "name": "width",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Height constraint",
                        "name": "height",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Quality of the output image (1-100)",
                        "name": "quality",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/flip": {
            "post": {
                "description": "Flips an image vertically",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Flip image vertically",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/flop": {
            "post": {
                "description": "Flips an image horizontally",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Flip image horizontally",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/form": {
            "get": {
                "description": "Returns an HTML form for uploading and processing images",
                "produces": [
                    "text/html"
                ],
                "summary": "HTML form for image processing",
                "responses": {}
            }
        },
        "/health": {
            "get": {
                "description": "Returns the health status of the service",
                "produces": [
                    "application/json"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.HealthStats"
                        }
                    }
                }
            }
        },
        "/info": {
            "post": {
                "description": "Returns metadata information about the image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get image info",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to analyze",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ImageInfo"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Returns Prometheus metrics for monitoring",
                "produces": [
                    "text/plain"
                ],
                "summary": "Prometheus metrics",
                "responses": {
                    "200": {
                        "description": "Prometheus metrics",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pipeline": {
            "post": {
                "description": "Applies a pipeline of operations to an image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Apply multiple operations",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JSON array of operations to apply",
                        "name": "operations",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/resize": {
            "post": {
                "description": "Resizes an image to the specified dimensions",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Resize image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Width of the output image",
                        "name": "width",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Height of the output image",
                        "name": "height",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Quality of the output image (1-100)",
                        "name": "quality",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/rotate": {
            "post": {
                "description": "Rotates an image by the specified angle",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Rotate image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Rotation angle (90, 180, 270, 360)",
                        "name": "rotate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/smartcrop": {
            "post": {
                "description": "Intelligently crops an image to the specified dimensions",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Smart crop image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Width of the output image",
                        "name": "width",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Height of the output image",
                        "name": "height",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Quality of the output image (1-100)",
                        "name": "quality",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/thumbnail": {
            "post": {
                "description": "Creates a thumbnail of the image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Create thumbnail",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Width of the thumbnail",
                        "name": "width",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Height of the thumbnail",
                        "name": "height",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/watermark": {
            "post": {
                "description": "Adds a text watermark to an image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Add text watermark",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Watermark text",
                        "name": "text",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Font name and size (e.g., 'sans 12')",
                        "name": "font",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Opacity of the watermark (0.0-1.0)",
                        "name": "opacity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Color of the watermark (R,G,B)",
                        "name": "color",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Width of the text area",
                        "name": "textwidth",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/watermarkimage": {
            "post": {
                "description": "Adds an image watermark to another image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Add image watermark",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "URL of the watermark image",
                        "name": "image",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Left offset for watermark",
                        "name": "left",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Top offset for watermark",
                        "name": "top",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Opacity of the watermark (0.0-1.0)",
                        "name": "opacity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/zoom": {
            "post": {
                "description": "Zooms an image by the specified factor",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "image/*"
                ],
                "summary": "Zoom image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to process",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Zoom factor",
                        "name": "factor",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Top offset for zoom area",
                        "name": "top",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Left offset for zoom area",
                        "name": "left",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Width of the area to zoom",
                        "name": "areawidth",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Height of the area to zoom",
                        "name": "areaheight",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Output image format (jpeg, png, webp, etc.)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Processed image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "406": {
                        "description": "Not acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "main.HealthStats": {
            "type": "object",
            "properties": {
                "OSMemoryObtained": {
                    "type": "number"
                },
                "allocatedMemory": {
                    "type": "number"
                },
                "completedGCCycles": {
                    "type": "integer"
                },
                "cpus": {
                    "type": "integer"
                },
                "goroutines": {
                    "type": "integer"
                },
                "heapInUse": {
                    "type": "number"
                },
                "maxHeapUsage": {
                    "type": "number"
                },
                "objectsInUse": {
                    "type": "integer"
                },
                "totalAllocatedMemory": {
                    "type": "number"
                },
                "uptime": {
                    "type": "integer"
                }
            }
        },
        "main.ImageInfo": {
            "type": "object",
            "properties": {
                "channels": {
                    "type": "integer"
                },
                "hasAlpha": {
                    "type": "boolean"
                },
                "hasProfile": {
                    "type": "boolean"
                },
                "height": {
                    "type": "integer"
                },
                "orientation": {
                    "type": "integer"
                },
                "space": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "main.Versions": {
            "type": "object",
            "properties": {
                "bimg": {
                    "type": "string"
                },
                "imaginary": {
                    "type": "string"
                },
                "libvips": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Imaginary",
	Description:      "Imaginary is a fast HTTP microservice for high-level image processing",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
